plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
    id "androidx.navigation.safeargs.kotlin"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.example.beerapp"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }

    flavorDimensions "default"
    productFlavors {
        onhouse {
            applicationIdSuffix ".onhouse"
            versionNameSuffix "_onhouse"
            dimension "default"
        }
        complimentary {
            applicationIdSuffix ".complimentary"
            versionNameSuffix "_complimentary"
            dimension "default"
        }
        paid {
            applicationIdSuffix ".paid"
            versionNameSuffix "_paid"
            dimension "default"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/AL2.0'
        exclude("META-INF/*.kotlin_module")
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    androidTestImplementation "androidx.test.ext:junit:$extJunitVersion"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"

    testImplementation "androidx.arch.core:core-testing:$archTestVersion"

    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$archTestVersion"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'

    implementation "androidx.legacy:legacy-support-v4:1.0.0"

    testImplementation "org.robolectric:robolectric:4.5.1"
    androidTestImplementation "androidx.test:core-ktx:1.5.0"

    testImplementation "app.cash.turbine:turbine:$turbineTestVersion"
    androidTestImplementation "app.cash.turbine:turbine:$turbineTestVersion"


    // hilt for dependency injection
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$squareUpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$squareUpVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$squareUpVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$squareUpVersion"


    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    // To use paging service
    implementation "androidx.room:room-paging:$roomVersion"

    //Paging
    implementation "androidx.paging:paging-runtime:3.1.1"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$ktxCoroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$ktxCoroutineVersion"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Navigation Graph
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    // Firebase Crashlytics and analytics
    implementation platform('com.google.firebase:firebase-bom:31.2.3')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Code coverage
    debugImplementation 'org.jacoco:org.jacoco.core:0.8.7'
}